pipeline {
  agent none
  
  stages {
    stage('Checkout') {
      agent {
        docker { image 'maven:3-openjdk-17' }
      }
      steps {
        git branch: 'main', url: '<URL>'
      }
    }
    stage('Build') {
      agent {
        docker { image 'maven:3-openjdk-17' }
      }
      steps {
        sh 'mvn clean package -DskipTests=true'
      }
    }
    stage('Test') {
      agent {
        docker { image 'maven:3-openjdk-17' }
      }
      steps {
        sh 'mvn test'
      }
    }
    stage('Build Docker Image') {
      agent { label 'controller' }
      steps {
        sh '<DOCKER_IMAGE_BUILD_COMMAND>'
      }
    }
    stage('Tag Docker Image') {
      agent { label 'controller' }
      steps {
        sh '<DOCKER_IMAGE_TAGGING_COMMAND>' # Tagging with build number
        sh '<DOCKER_IMAGE_TAGGING_COMMAND>' # Tagging with latest
      }
    }
    stage('Publish Docker Image') {
      agent { label 'controller' }
      steps {
        withDockerRegistry(credentialsId: 'docker-registry-credentials', url: 'https://index.docker.io/v1/') {
          sh '<DOCKER_IMAGE_PUSH_COMMAND>' # Tagging with build number
          sh '<DOCKER_IMAGE_PUSH_COMMAND>' # Tagging with latest
        }
      }
    }
    stage('Run Docker Container') {
      agent { label 'controller' }
      steps {
        sh 'docker container run --detach --name <CONATINAER_NAME> -p 80:8080 <DOCKER_IMAGE_NAME>:<BUILD_NUMBER>'
      }
    }
  }
}
